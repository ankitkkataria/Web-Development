<!-- You successfully used ejs-mate by calling in layout one thing to note that is weird about this layout call it starts scanning from the views directory to find the layouts/boilerplate not from this directory in which this file is present so you don't need to do ../layouts/boilerplate here. -->
<% layout('layouts/boilerplate') %>
<div class="row">
  <h1 class="text-center">Add New Campground</h1>
  <div class="col-6 offset-3">
    <form action="/campgrounds" method="post">
      <div class="mb-3">
        <label class="form-label" for="title">Title</label>
        <input
          type="text"
          id="title"
          class="form-control"
          name="campground[title]"
        />
      </div>
      <div class="mb-3">
        <label class="form-label" for="location">Location</label>
        <input
          type="text"
          id="location"
          class="form-control"
          name="campground[location]"
        />
      </div>
      <div class="mb-3">
        <label class="form-label" for="imageURL">Image URL</label>
        <input
          type="text"
          id="imageURL"
          class="form-control"
          name="campground[image]"
        />
      </div>
      <div class="mb-3">
        <label class="form-label" for="price">Campground Price</label>
        <div class="input-group">
          <div class="input-group-prepend">
            <span class="input-group-text" id="price-label">$</span>
          </div>
          <input
            type="text"
            class="form-control"
            placeholder="0.00"
            name="campground[price]"
            aria-label="price"
            aria-describedby="price-label"
          />
        </div>
      </div>
      <div class="mb-3">
        <label class="form-label" for="description">Description</label>
        <textarea
          type="text"
          id="description"
          class="form-control"
          name="campground[description]"
        ></textarea>
      </div>
      <div class="mb-3">
        <button class="btn btn-success">Submit</button>
      </div>
    </form>
    <a href="/campgrounds">All Campgrounds</a>
  </div>
</div>

<!-- <form action="/campgrounds" method="POST">
    <div>
        <label for="title">Title</label>
        <input type="text" id="title" name="campground[title]">
    </div>
    <div>
        <label for="location">Location</label>
        <input type="text" id="location" name="campground[location]">
    </div>
    <button>Add Campground</button>
</form>
Because of campground[title] and campground[location]
It will return this object down below.
   {
    "campground": 
    {
    "title": "anything",
    "location": "anywhere"
    } 
   }
So the request.body will contain the object above inside it. -->

<!-- It's a matter of personal preference, but the object would be different in the end; with the campground[property] approach, the properties would be found in the req.body.campground object, that one could pass directly in one go, without needing to create each property in the route with the other approach, like this example:

var name = req.body.name;
var image = req.body.image;
var desc = req.body.description;
var newCampground = {name: name, image: image, description: desc}
However, although this needed some years ago, now, with spread, we no longer need to use the long way, so, as I mentioned, both options are fine nowadays. -->
