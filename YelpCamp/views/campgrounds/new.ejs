<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>New Campground</title>
  </head>
  <body>
    <h1>Add New Campground</h1>
    <form action="/campgrounds" method="post">
      <div>
        <label for="title">Title</label>
        <input type="text" id="title" name="campground[title]" />
      </div>
      <div>
        <label for="location">Location</label>
        <input type="text" id="location" name="campground[location]" />
      </div>
      <button>Submit</button>
    </form>
    <a href="/campgrounds">All Campgrounds</a>
  </body>
</html>


<!-- <form action="/campgrounds" method="POST">
    <div>
        <label for="title">Title</label>
        <input type="text" id="title" name="campground[title]">
    </div>
    <div>
        <label for="location">Location</label>
        <input type="text" id="location" name="campground[location]">
    </div>
    <button>Add Campground</button>
</form>
Because of campground[title] and campground[location]
It will return this object down below.
   {
    "campground": 
    {
    "title": "anything",
    "location": "anywhere"
    } 
   }
So the request.body will contain the object above inside it. -->

   
<!-- It's a matter of personal preference, but the object would be different in the end; with the campground[property] approach, the properties would be found in the req.body.campground object, that one could pass directly in one go, without needing to create each property in the route with the other approach, like this example:

var name = req.body.name;
var image = req.body.image;
var desc = req.body.description;
var newCampground = {name: name, image: image, description: desc}
However, although this needed some years ago, now, with spread, we no longer need to use the long way, so, as I mentioned, both options are fine nowadays. -->